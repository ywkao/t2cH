quick.sh::start!
./upperlimit/hct_tt_lep/fcnc_TT_leptonic_counting_br0.01.txt
# now we list the expected events for signal and all backgrounds in that bin
 <<< Combine >>> 
>>> including systematics
>>> method used is AsymptoticLimits
>>> random number generator seed is 123456
RooArgSet:: = ()
Computing results starting from observation (a-posteriori)

 -- AsymptoticLimits ( CLs ) --
Observed Limit: r < 3.5631
Expected  2.5%: r < 2.7045
Expected 16.0%: r < 4.0110
Expected 50.0%: r < 6.5938
Expected 84.0%: r < 11.6926
Expected 97.5%: r < 19.9853

Done in 0.01 min (cpu), 0.01 min (real)
./upperlimit/hct_tt_lep/fcnc_TT_leptonic_counting_br0.02.txt
# now we list the expected events for signal and all backgrounds in that bin
 <<< Combine >>> 
>>> including systematics
>>> method used is AsymptoticLimits
>>> random number generator seed is 123456
RooArgSet:: = ()
Computing results starting from observation (a-posteriori)

 -- AsymptoticLimits ( CLs ) --
Observed Limit: r < 1.7817
Expected  2.5%: r < 1.3522
Expected 16.0%: r < 2.0055
Expected 50.0%: r < 3.2969
Expected 84.0%: r < 5.8463
Expected 97.5%: r < 9.9927

Done in 0.01 min (cpu), 0.01 min (real)
./upperlimit/hct_tt_lep/fcnc_TT_leptonic_counting_br0.03.txt
# now we list the expected events for signal and all backgrounds in that bin
 <<< Combine >>> 
>>> including systematics
>>> method used is AsymptoticLimits
>>> random number generator seed is 123456
RooArgSet:: = ()
Computing results starting from observation (a-posteriori)

 -- AsymptoticLimits ( CLs ) --
Observed Limit: r < 1.1876
Expected  2.5%: r < 0.8950
Expected 16.0%: r < 1.3345
Expected 50.0%: r < 2.2031
Expected 84.0%: r < 3.9068
Expected 97.5%: r < 6.6776

Done in 0.01 min (cpu), 0.01 min (real)
./upperlimit/hct_tt_lep/fcnc_TT_leptonic_counting_br0.04.txt
# now we list the expected events for signal and all backgrounds in that bin
 <<< Combine >>> 
>>> including systematics
>>> method used is AsymptoticLimits
>>> random number generator seed is 123456
RooArgSet:: = ()
Computing results starting from observation (a-posteriori)

 -- AsymptoticLimits ( CLs ) --
Observed Limit: r < 0.8908
Expected  2.5%: r < 0.6761
Expected 16.0%: r < 1.0028
Expected 50.0%: r < 1.6484
Expected 84.0%: r < 2.9232
Expected 97.5%: r < 4.9963

Done in 0.01 min (cpu), 0.01 min (real)
./upperlimit/hct_tt_lep/fcnc_TT_leptonic_counting_br0.05.txt
# now we list the expected events for signal and all backgrounds in that bin
 <<< Combine >>> 
>>> including systematics
>>> method used is AsymptoticLimits
>>> random number generator seed is 123456
RooArgSet:: = ()
Computing results starting from observation (a-posteriori)

 -- AsymptoticLimits ( CLs ) --
Observed Limit: r < 0.7114
Expected  2.5%: r < 0.5364
Expected 16.0%: r < 0.7997
Expected 50.0%: r < 1.3203
Expected 84.0%: r < 2.3413
Expected 97.5%: r < 4.0018

Done in 0.01 min (cpu), 0.01 min (real)
./upperlimit/hct_tt_lep/fcnc_TT_leptonic_counting_br0.06.txt
# now we list the expected events for signal and all backgrounds in that bin
 <<< Combine >>> 
>>> including systematics
>>> method used is AsymptoticLimits
>>> random number generator seed is 123456
RooArgSet:: = ()
Computing results starting from observation (a-posteriori)

 -- AsymptoticLimits ( CLs ) --
Observed Limit: r < 0.5938
Expected  2.5%: r < 0.4475
Expected 16.0%: r < 0.6672
Expected 50.0%: r < 1.1016
Expected 84.0%: r < 1.9534
Expected 97.5%: r < 3.3388

Done in 0.01 min (cpu), 0.01 min (real)
./upperlimit/hct_tt_lep/fcnc_TT_leptonic_counting_br0.07.txt
# now we list the expected events for signal and all backgrounds in that bin
 <<< Combine >>> 
>>> including systematics
>>> method used is AsymptoticLimits
>>> random number generator seed is 123456
RooArgSet:: = ()
Computing results starting from observation (a-posteriori)

 -- AsymptoticLimits ( CLs ) --
Observed Limit: r < 0.5083
Expected  2.5%: r < 0.3840
Expected 16.0%: r < 0.5726
Expected 50.0%: r < 0.9453
Expected 84.0%: r < 1.6763
Expected 97.5%: r < 2.8652

Done in 0.01 min (cpu), 0.01 min (real)
./upperlimit/hct_tt_lep/fcnc_TT_leptonic_counting_br0.08.txt
# now we list the expected events for signal and all backgrounds in that bin
 <<< Combine >>> 
>>> including systematics
>>> method used is AsymptoticLimits
>>> random number generator seed is 123456
RooArgSet:: = ()
Computing results starting from observation (a-posteriori)

 -- AsymptoticLimits ( CLs ) --
Observed Limit: r < 0.4454
Expected  2.5%: r < 0.3381
Expected 16.0%: r < 0.5014
Expected 50.0%: r < 0.8242
Expected 84.0%: r < 1.4616
Expected 97.5%: r < 2.4982

Done in 0.01 min (cpu), 0.01 min (real)
./upperlimit/hct_tt_lep/fcnc_TT_leptonic_counting_br0.09.txt
# now we list the expected events for signal and all backgrounds in that bin
 <<< Combine >>> 
>>> including systematics
>>> method used is AsymptoticLimits
>>> random number generator seed is 123456
RooArgSet:: = ()
Computing results starting from observation (a-posteriori)

 -- AsymptoticLimits ( CLs ) --
Observed Limit: r < 0.3961
Expected  2.5%: r < 0.2983
Expected 16.0%: r < 0.4448
Expected 50.0%: r < 0.7344
Expected 84.0%: r < 1.3023
Expected 97.5%: r < 2.2259

Done in 0.01 min (cpu), 0.01 min (real)
./upperlimit/hct_tt_lep/fcnc_TT_leptonic_counting_br0.10.txt
# now we list the expected events for signal and all backgrounds in that bin
 <<< Combine >>> 
>>> including systematics
>>> method used is AsymptoticLimits
>>> random number generator seed is 123456
RooArgSet:: = ()
Computing results starting from observation (a-posteriori)

 -- AsymptoticLimits ( CLs ) --
Observed Limit: r < 0.3557
Expected  2.5%: r < 0.2682
Expected 16.0%: r < 0.3999
Expected 50.0%: r < 0.6602
Expected 84.0%: r < 1.1707
Expected 97.5%: r < 2.0009

Done in 0.01 min (cpu), 0.01 min (real)
